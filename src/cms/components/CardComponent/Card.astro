---
import type {
CardFragment,
DisplaySettingsFragment,
} from '../../../../__generated/sdk';

import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import { getDictionaryFromDisplaySettings } from '../../../graphql/shared/displaySettingsHelpers';
import { getAssetWidthClass, getContentWidthClass } from './CardHelper';
import Asset from './Asset.astro';
import Content from './Content.astro';
import Wrapper from './Wrapper.astro';
export interface Props {
    data: CardFragment;
    displaySettings: DisplaySettingsFragment[];
    displayTemplateKey: string;
    contentPayload: ContentPayload;
}
const { data, displaySettings, displayTemplateKey, contentPayload } =
    Astro.props as Props;

const dictionary = getDictionaryFromDisplaySettings(displaySettings);
const { backgroundColor } = dictionary;
const { DisplayAs } = data;
const assetWidthClass = getAssetWidthClass(dictionary);
const contentWidthClass = getContentWidthClass(dictionary);
---

<Wrapper DisplayAs={DisplayAs ?? ''}>
    <Asset
        data={data}
        displaySettings={displaySettings}
        displayTemplateKey={displayTemplateKey}
        contentPayload={contentPayload}
        DisplayAs={DisplayAs ?? undefined}
        widthClass={assetWidthClass}
    />
    <Content
        data={data}
        displaySettings={displaySettings}
        displayTemplateKey={displayTemplateKey}
        contentPayload={contentPayload}
        DisplayAs={DisplayAs ?? undefined}
        widthClass={contentWidthClass}
    />
</Wrapper>
