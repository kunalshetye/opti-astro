---
// Using AstroImage alias to avoid naming conflict with ImageFragment type
import { Image as AstroImage } from 'astro:assets';
import type { DisplaySettingsFragment, ImageResponsiveFragment } from '../../../../__generated/sdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import { getImageElementStyles } from './ImageResponsiveStyling';
import { isEditContext } from '../../shared/utils.ts';

const isCmsEdit = isEditContext(Astro.url);

export interface Props {
    key: string,
    data: ImageResponsiveFragment;
    displaySettings: DisplaySettingsFragment[];
    contentPayload: ContentPayload;
}
const { key, data, displaySettings } = Astro.props as Props;

const imageUrl = (data.Image as any)?.item?.Url || data.Image?.url?.default || null;
const imageUrlTablet = (data.ImageTablet as any)?.item?.Url || data.ImageTablet?.url?.default || null;
const imageUrlMobile = (data.ImageMobile as any)?.item?.Url || data.ImageMobile?.url?.default || null;
---

{imageUrl && (
    <picture data-epi-block-id={isCmsEdit && key || undefined} class="w-full">
        {imageUrlMobile && (
            <source media="(max-width: 767px)" srcset={imageUrlMobile} />
        )}
        {imageUrlTablet && (
            <source media="(max-width: 1023px)" srcset={imageUrlTablet} />
        )}
        <AstroImage
            class:list={['w-full', ...getImageElementStyles(displaySettings)]}
            src={imageUrl}
            alt={data.AltText || ''}
            inferSize={true}
        />
    </picture>
)}
