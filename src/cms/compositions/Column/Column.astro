---
import type { CompositionStructureNode } from '../../../../__generated/sdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import Elements from '../../components/_Components.astro';
import { getColumnStyles } from './ColumnHelper';
import { getGlobalStyles } from '../../shared/globalStylesHelper';

export interface Props {
    column: CompositionStructureNode;
    contentPayload: ContentPayload;
    parentColumnsPerRow?: string;
}
const { column, contentPayload, parentColumnsPerRow = 'auto' } = Astro.props as Props;
const styles = getColumnStyles(column, parentColumnsPerRow);
const globalStyles = getGlobalStyles(column);
const allStyles = [...styles, ...globalStyles];
---

<div
    class:list={allStyles}
    class="vb:col grid w-full grid-cols-1 p-2 sm:p-3 md:p-4"
>
    {
        column.nodes?.map((item: any) => (
            <Elements contentPayload={contentPayload} data={item}/>
        ))
    }
</div>
