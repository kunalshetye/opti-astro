---
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import Components from '../../components/_Components.astro';
import Row from '../Row/Row.astro';
import { getSectionStyles } from './SectionHelper';
import { getGlobalStyles } from '../../shared/globalStylesHelper';
export interface Props {
    grid: any;
    contentPayload: ContentPayload;
}
const { grid, contentPayload } = Astro.props as Props;
const isSection = grid.nodeType === 'section';
const isComponent = grid.nodeType === 'component';
const sectionStyles = getSectionStyles(grid);
const globalStyles = getGlobalStyles(grid);
const styles = [...sectionStyles, ...globalStyles];
---

<div
    class:list={styles}
    class="vb:grid relative flex w-full flex-col justify-start p-2 sm:p-3 md:p-4"
    data-epi-block-id={grid.key}
>
    {
        isSection &&
            grid.rows?.map((row: any) => (
                <Row contentPayload={contentPayload} row={row} />
            ))
    }

    {
        isComponent && (
            <div data-epi-block-id={grid.key}>
                <Components contentPayload={contentPayload} data={grid} />
            </div>
        )
    }
</div>
