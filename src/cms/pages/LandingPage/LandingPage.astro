---
import type { Locales } from 'astro';
import type { LandingPageFragment } from '../../../../__generated/sdk';
import { getOptimizelySdk } from '../../../graphql/getSdk';
import type { ContentPayload } from '../../../graphql/shared/ContentPayload';
import Layout from '../../../layouts/Layout.astro';
import ContentArea from '../../shared/ContentArea/ContentArea.astro';

export interface Props {
    contentPayload: ContentPayload;
}
const { contentPayload } = Astro.props as Props;

const optiResponse = await getOptimizelySdk(contentPayload).pageById({
    key: contentPayload.key,
    //@ts-ignore
    loc: contentPayload.loc as Locales,
    ver: contentPayload.ver,
});

const page = optiResponse?._Page?.item as LandingPageFragment;

const hierarchicalUrl = page?._metadata?.url?.type === "SIMPLE" ? page?._metadata?.url?.hierarchical : '';
---

<Layout
    title={page.SeoSettings?.MetaTitle ?? ''}
    description={page.SeoSettings?.MetaDescription ?? ''}
    contentPayload={contentPayload}
    hierarchicalUrl={hierarchicalUrl ?? ''}
>
    <!--Top content area-->
    {
        page?.TopContentArea?.map((contentAreaItem: any) => (
            <ContentArea
                contentPayload={contentPayload}
                contentAreaItem={contentAreaItem}
            />
        ))
    }
    <!--Main content area-->
    {
        page.MainContentArea?.map((contentAreaItem: any) => (
            <ContentArea
                contentPayload={contentPayload}
                contentAreaItem={contentAreaItem}
            />
        ))
    }
</Layout>
