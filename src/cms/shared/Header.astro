---
import { Image as AstroImage } from 'astro:assets';

import { getRelativeLocaleUrl } from 'astro:i18n';
import type { SiteSettingsByHostnameQuery } from '../../../__generated/sdk';
import { getClassForLogo } from './siteSettingsHelper';
import SearchPalette from './SearchPalette.astro';
import ThemePicker from './ThemePicker.astro';
// import { getMenuItems } from './siteSettingsHelper';
const lang = Astro.currentLocale || '';

// Define interfaces for the menu items to fix TypeScript errors
interface LinkType {
    text: string;
    url: {
        default: string;
    };
}

interface MenuItemType {
    Link: LinkType;
    SubMenuItems?: MenuItemType[];
}

interface Props {
    siteSettings: SiteSettingsByHostnameQuery;
}

const { siteSettings } = Astro.props;
const settings = siteSettings?.SiteSettings?.item;

const logoUrl = (settings?.Logo as any)?.item?.Url || settings?.Logo?.url?.default || null;
const logoCss = getClassForLogo(settings?.LogoResolution);

const headerItems = settings?.HeaderLinks as MenuItemType[] | undefined;
const headerItemCount = headerItems?.length || 0;
---

<header class="sticky top-0 z-50 bg-gray-50/70 backdrop-blur-sm">
    <div class="navbar bg-base-100 shadow-sm">
        <div class="navbar-start">
            <div class="dropdown">
                <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M4 6h16M4 12h8m-8 6h16"></path>
                    </svg>
                </div>
                <ul
                    tabindex="0"
                    class="menu menu-sm dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 text-lg shadow"
                >
                    {
                        headerItems &&
                            headerItemCount &&
                            headerItemCount > 0 &&
                            headerItems.map((data) => (
                                <li>
                                    {(!data?.SubMenuItems ||
                                        data?.SubMenuItems?.length == 0) && (
                                        <a
                                            class="text-lg text-gray-500 transition hover:text-gray-500/75"
                                            href={
                                                data?.Link?.url?.default || '#'
                                            }
                                        >
                                            {data?.Link?.text || ''}
                                        </a>
                                    )}

                                    {data?.SubMenuItems &&
                                        data?.SubMenuItems?.length > 0 && (
                                            <details>
                                                <summary class="text-lg text-gray-500 transition hover:text-gray-500/75">
                                                    {data?.Link?.text || ''}
                                                </summary>
                                                <ul class="p-2">
                                                    {data?.SubMenuItems
                                                        ?.length > 0 &&
                                                        data?.SubMenuItems.map(
                                                            (subdata: any) => (
                                                                <li class="text-lg text-gray-500 transition hover:text-gray-500/75">
                                                                    <a
                                                                        class="text-lg transition hover:text-gray-500/75"
                                                                        href={
                                                                            subdata
                                                                                ?.Link
                                                                                ?.url
                                                                                ?.default ||
                                                                            '#'
                                                                        }
                                                                    >
                                                                        {subdata
                                                                            ?.Link
                                                                            ?.text ||
                                                                            ''}
                                                                    </a>
                                                                </li>
                                                            )
                                                        )}
                                                </ul>
                                            </details>
                                        )}
                                </li>
                            ))
                    }
                </ul>
            </div>
            <a
                class="block px-8 text-teal-600"
                href={getRelativeLocaleUrl(lang, '/')}
            >
                <span class="sr-only">Home</span>
                <AstroImage
                    class:list={[logoCss, "w-full object-contain max-w-full"]}
                    src={logoUrl ?? '/optimizely-logo.svg'}
                    alt="Logo"
                    width=300
                    height=300
                />
            </a>
        </div>
        <div class="navbar-center hidden lg:flex">
            <ul class="menu menu-horizontal px-1 text-lg">
                {
                    headerItems &&
                        headerItemCount > 0 &&
                        headerItems.map((data) => (
                            <li>
                                {(!data?.SubMenuItems ||
                                    data?.SubMenuItems?.length == 0) && (
                                    <a
                                        class="text-gray-500 transition hover:text-gray-500/75"
                                        href={data?.Link?.url?.default || '#'}
                                    >
                                        {data?.Link?.text || ''}
                                    </a>
                                )}

                                {data?.SubMenuItems &&
                                    data?.SubMenuItems?.length > 0 && (
                                        <div class="dropdown dropdown-hover pb-2">
                                            <div
                                                tabindex="0"
                                                role="button"
                                                class="mb-2 text-gray-500 transition hover:text-gray-500/75"
                                            >
                                                {data?.Link?.text || ''}
                                            </div>
                                            <ul
                                                tabindex="0"
                                                class="dropdown-content menu bg-base-200 rounded-box z-1 w-52 text-lg shadow-sm"
                                            >
                                                {data?.SubMenuItems?.length >
                                                    0 &&
                                                    data?.SubMenuItems.map(
                                                        (subdata: any) => (
                                                            <li class="text-gray-500 transition hover:text-gray-500/75">
                                                                <a
                                                                    href={
                                                                        subdata
                                                                            ?.Link
                                                                            ?.url
                                                                            ?.default ||
                                                                        '#'
                                                                    }
                                                                >
                                                                    {subdata
                                                                        ?.Link
                                                                        ?.text ||
                                                                        ''}
                                                                </a>
                                                            </li>
                                                        )
                                                    )}
                                            </ul>
                                        </div>
                                    )}
                            </li>
                        ))
                }
            </ul>
        </div>
        <div class="navbar-end" x-data>
            <!-- Search input -->
            <div class="relative hidden lg:block">
                <input
                    id="search-input"
                    type="text"
                    placeholder="Search... (⌘K / Ctrl+K)"
                    class="input input-bordered input-sm w-44 pl-10 pr-4"
                    readonly
                    @click="$dispatch('open-command-palette')"
                />
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-400"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
                    ></path>
                </svg>
            </div>
            <!-- Search button -->
            <button
                id="search-button"
                @click="$dispatch('open-command-palette')"
                class="btn btn-ghost btn-circle lg:hidden"
                aria-label="Search"
            >
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="h-5 w-5"
                    class="absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-gray-400"
                >
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
                    ></path>
                </svg>
            </button>
            <!-- Theme switcher dropdown -->
            <ThemePicker />
            <a class="btn" href="https://home.optimizely.com/">Log In</a>
        </div>
    </div>
</header>

<!-- Search Palette Component -->
<SearchPalette />

<!-- Keyboard shortcut for search -->
<script is:inline>
    document.addEventListener('keydown', function(e) {
        // Cmd+K (Mac) or Ctrl+K (Windows/Linux)
        if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
            e.preventDefault();
            window.dispatchEvent(new CustomEvent('open-command-palette'));
        }
    });
</script>
