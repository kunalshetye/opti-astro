---
import { getRelativeLocaleUrl } from 'astro:i18n';
import type { SiteSettingsByHostnameQuery } from '../../../__generated/sdk';
import { getClassForLogo } from './siteSettingsHelper';
// import { getMenuItems } from './siteSettingsHelper';
const lang = Astro.currentLocale || '';

// Define interfaces for the menu items to fix TypeScript errors
interface LinkType {
    text: string;
    url: {
        default: string;
    };
}

interface MenuItemType {
    Link: LinkType;
    SubMenuItems?: MenuItemType[];
}

interface Props {
    siteSettings: SiteSettingsByHostnameQuery;
}

const { siteSettings } = Astro.props;
const settings = siteSettings?.SiteSettings?.item;
const logoCss = getClassForLogo(settings?.LogoResolution);

const headerItems = settings?.HeaderLinks as MenuItemType[] | undefined;
const headerItemCount = headerItems?.length || 0;

// Available themes from daisyUI
const themes = [
    // Light themes
    { name: 'Light(ðŸ”†)', value: 'light' },
    { name: 'Acid(ðŸ”†)', value: 'acid' },
    { name: 'Autumn(ðŸ”†)', value: 'autumn' },
    { name: 'Bumblebee(ðŸ”†)', value: 'bumblebee' },
    { name: 'Cmyk(ðŸ”†)', value: 'cmyk' },
    { name: 'Corporate(ðŸ”†)', value: 'corporate' },
    { name: 'Cupcake(ðŸ”†)', value: 'cupcake' },
    { name: 'Cyberpunk(ðŸ”†)', value: 'cyberpunk' },
    { name: 'Emerald(ðŸ”†)', value: 'emerald' },
    { name: 'Fantasy(ðŸ”†)', value: 'fantasy' },
    { name: 'Garden(ðŸ”†)', value: 'garden' },
    { name: 'Lemonade(ðŸ”†)', value: 'lemonade' },
    { name: 'Lofi(ðŸ”†)', value: 'lofi' },
    { name: 'Nord(ðŸ”†)', value: 'nord' },
    { name: 'Pastel(ðŸ”†)', value: 'pastel' },
    { name: 'Retro(ðŸ”†)', value: 'retro' },
    { name: 'Valentine(ðŸ”†)', value: 'valentine' },
    { name: 'Winter(ðŸ”†)', value: 'winter' },
    { name: 'Wireframe(ðŸ”†)', value: 'wireframe' },

    // Dark themes
    { name: 'Dark(ðŸŒ‘)', value: 'dark' },
    { name: 'Aqua(ðŸŒ‘)', value: 'aqua' },
    { name: 'Black(ðŸŒ‘)', value: 'black' },
    { name: 'Business(ðŸŒ‘)', value: 'business' },
    { name: 'Coffee(ðŸŒ‘)', value: 'coffee' },
    { name: 'Dim(ðŸŒ‘)', value: 'dim' },
    { name: 'Dracula(ðŸŒ‘)', value: 'dracula' },
    { name: 'Forest(ðŸŒ‘)', value: 'forest' },
    { name: 'Halloween(ðŸŒ‘)', value: 'halloween' },
    { name: 'Luxury(ðŸŒ‘)', value: 'luxury' },
    { name: 'Night(ðŸŒ‘)', value: 'night' },
    { name: 'Sunset(ðŸŒ‘)', value: 'sunset' },
    { name: 'Synthwave(ðŸŒ‘)', value: 'synthwave' },
];
---

<header class="sticky top-0 z-50 bg-gray-50/70 backdrop-blur-sm">
    <div class="navbar bg-base-100 shadow-sm">
        <div class="navbar-start">
            <div class="dropdown">
                <div tabindex="0" role="button" class="btn btn-ghost lg:hidden">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-5 w-5"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M4 6h16M4 12h8m-8 6h16"></path>
                    </svg>
                </div>
                <ul
                    tabindex="0"
                    class="menu menu-sm dropdown-content bg-base-100 rounded-box z-1 mt-3 w-52 p-2 text-lg shadow"
                >
                    {
                        headerItems &&
                            headerItemCount &&
                            headerItemCount > 0 &&
                            headerItems.map((data) => (
                                <li>
                                    {(!data?.SubMenuItems ||
                                        data?.SubMenuItems?.length == 0) && (
                                        <a
                                            class="text-lg text-gray-500 transition hover:text-gray-500/75"
                                            href={
                                                data?.Link?.url?.default || '#'
                                            }
                                        >
                                            {data?.Link?.text || ''}
                                        </a>
                                    )}

                                    {data?.SubMenuItems &&
                                        data?.SubMenuItems?.length > 0 && (
                                            <details>
                                                <summary class="text-lg text-gray-500 transition hover:text-gray-500/75">
                                                    {data?.Link?.text || ''}
                                                </summary>
                                                <ul class="p-2">
                                                    {data?.SubMenuItems
                                                        ?.length > 0 &&
                                                        data?.SubMenuItems.map(
                                                            (subdata: any) => (
                                                                <li class="text-lg text-gray-500 transition hover:text-gray-500/75">
                                                                    <a
                                                                        class="text-lg transition hover:text-gray-500/75"
                                                                        href={
                                                                            subdata
                                                                                ?.Link
                                                                                ?.url
                                                                                ?.default ||
                                                                            '#'
                                                                        }
                                                                    >
                                                                        {subdata
                                                                            ?.Link
                                                                            ?.text ||
                                                                            ''}
                                                                    </a>
                                                                </li>
                                                            )
                                                        )}
                                                </ul>
                                            </details>
                                        )}
                                </li>
                            ))
                    }
                </ul>
            </div>
            <a
                class="block px-8 text-teal-600"
                href={getRelativeLocaleUrl(lang, '/')}
            >
                <span class="sr-only">Home</span>
                <img
                    class={logoCss}
                    src={settings?.Logo?.url?.default ?? '/optimizely-logo.svg'}
                />
            </a>
        </div>
        <div class="navbar-center hidden lg:flex">
            <ul class="menu menu-horizontal px-1 text-lg">
                {
                    headerItems &&
                        headerItemCount > 0 &&
                        headerItems.map((data) => (
                            <li>
                                {(!data?.SubMenuItems ||
                                    data?.SubMenuItems?.length == 0) && (
                                    <a
                                        class="text-gray-500 transition hover:text-gray-500/75"
                                        href={data?.Link?.url?.default || '#'}
                                    >
                                        {data?.Link?.text || ''}
                                    </a>
                                )}

                                {data?.SubMenuItems &&
                                    data?.SubMenuItems?.length > 0 && (
                                        <div class="dropdown dropdown-hover pb-2">
                                            <div
                                                tabindex="0"
                                                role="button"
                                                class="mb-2 text-gray-500 transition hover:text-gray-500/75"
                                            >
                                                {data?.Link?.text || ''}
                                            </div>
                                            <ul
                                                tabindex="0"
                                                class="dropdown-content menu bg-base-200 rounded-box z-1 w-52 text-lg shadow-sm"
                                            >
                                                {data?.SubMenuItems?.length >
                                                    0 &&
                                                    data?.SubMenuItems.map(
                                                        (subdata: any) => (
                                                            <li class="text-gray-500 transition hover:text-gray-500/75">
                                                                <a
                                                                    href={
                                                                        subdata
                                                                            ?.Link
                                                                            ?.url
                                                                            ?.default ||
                                                                        '#'
                                                                    }
                                                                >
                                                                    {subdata
                                                                        ?.Link
                                                                        ?.text ||
                                                                        ''}
                                                                </a>
                                                            </li>
                                                        )
                                                    )}
                                            </ul>
                                        </div>
                                    )}
                            </li>
                        ))
                }
            </ul>
        </div>
        <div class="navbar-end">
            <!-- Theme switcher dropdown -->
            <div class="dropdown dropdown-end mr-2">
                <div
                    tabindex="0"
                    role="button"
                    class="btn btn-ghost btn-circle"
                >
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="1.5"
                        stroke="currentColor"
                        class="h-5 w-5"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d="M9.53 16.122a3 3 0 0 0-5.78 1.128 2.25 2.25 0 0 1-2.4 2.245 4.5 4.5 0 0 0 8.4-2.245c0-.399-.078-.78-.22-1.128Zm0 0a15.998 15.998 0 0 0 3.388-1.62m-5.043-.025a15.994 15.994 0 0 1 1.622-3.395m3.42 3.42a15.995 15.995 0 0 0 4.764-4.648l3.876-5.814a1.151 1.151 0 0 0-1.597-1.597L14.146 6.32a15.996 15.996 0 0 0-4.649 4.763m3.42 3.42a6.776 6.776 0 0 0-3.42-3.42"
                        ></path>
                    </svg>
                </div>
                <ul
                    tabindex="0"
                    class="dropdown-content menu bg-base-100 rounded-box z-[1] h-[41rem] w-72 overflow-auto p-2 shadow"
                >
                    {
                        themes.map((theme) => (
                            <li>
                                <button
                                    data-set-theme={theme.value}
                                    data-act-class="active"
                                >
                                    {theme.name}
                                </button>
                            </li>
                        ))
                    }
                </ul>
            </div>
            <a class="btn" href="https://home.optimizely.com/">Log In</a>
        </div>
    </div>
</header>

<script is:inline>
    // Load the theme-change library directly using a CDN to avoid import issues
    (function () {
        const themeChange = window.themeChange || {};

        // Set default theme if none is stored
        if (!localStorage.getItem('theme')) {
            localStorage.setItem('theme', 'light');
            document.documentElement.setAttribute('data-theme', 'light');
        }

        // Add event listener to theme buttons after page load
        document.addEventListener('DOMContentLoaded', function () {
            const themeButtons = document.querySelectorAll('[data-set-theme]');
            themeButtons.forEach((button) => {
                button.addEventListener('click', function () {
                    const theme = this.getAttribute('data-set-theme');
                    document.documentElement.setAttribute('data-theme', theme);
                    localStorage.setItem('theme', theme);
                });
            });
        });
    })();
</script>

<!-- Load theme from localStorage on page load -->
<script is:inline>
    (function () {
        const theme = localStorage.getItem('theme');
        if (theme) {
            document.documentElement.setAttribute('data-theme', theme);
        }
    })();
</script>
