---

// Available themes from daisyUI
const themes = [
    // Light themes
    { name: 'Light(ðŸ”†)', value: 'light' },
    { name: 'Acid(ðŸ”†)', value: 'acid' },
    { name: 'Autumn(ðŸ”†)', value: 'autumn' },
    { name: 'Bumblebee(ðŸ”†)', value: 'bumblebee' },
    { name: 'Cmyk(ðŸ”†)', value: 'cmyk' },
    { name: 'Corporate(ðŸ”†)', value: 'corporate' },
    { name: 'Cupcake(ðŸ”†)', value: 'cupcake' },
    { name: 'Cyberpunk(ðŸ”†)', value: 'cyberpunk' },
    { name: 'Emerald(ðŸ”†)', value: 'emerald' },
    { name: 'Fantasy(ðŸ”†)', value: 'fantasy' },
    { name: 'Garden(ðŸ”†)', value: 'garden' },
    { name: 'Lemonade(ðŸ”†)', value: 'lemonade' },
    { name: 'Lofi(ðŸ”†)', value: 'lofi' },
    { name: 'Nord(ðŸ”†)', value: 'nord' },
    { name: 'Pastel(ðŸ”†)', value: 'pastel' },
    { name: 'Retro(ðŸ”†)', value: 'retro' },
    { name: 'Valentine(ðŸ”†)', value: 'valentine' },
    { name: 'Winter(ðŸ”†)', value: 'winter' },
    { name: 'Wireframe(ðŸ”†)', value: 'wireframe' },

    // Dark themes
    { name: 'Dark(ðŸŒ‘)', value: 'dark' },
    { name: 'Aqua(ðŸŒ‘)', value: 'aqua' },
    { name: 'Black(ðŸŒ‘)', value: 'black' },
    { name: 'Business(ðŸŒ‘)', value: 'business' },
    { name: 'Coffee(ðŸŒ‘)', value: 'coffee' },
    { name: 'Dim(ðŸŒ‘)', value: 'dim' },
    { name: 'Dracula(ðŸŒ‘)', value: 'dracula' },
    { name: 'Forest(ðŸŒ‘)', value: 'forest' },
    { name: 'Halloween(ðŸŒ‘)', value: 'halloween' },
    { name: 'Luxury(ðŸŒ‘)', value: 'luxury' },
    { name: 'Night(ðŸŒ‘)', value: 'night' },
    { name: 'Sunset(ðŸŒ‘)', value: 'sunset' },
    { name: 'Synthwave(ðŸŒ‘)', value: 'synthwave' },
];

---

<!-- Theme switcher dropdown -->
<div class="dropdown dropdown-end mr-2">
    <div
        tabindex="0"
        role="button"
        class="btn btn-ghost btn-circle"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="h-5 w-5"
        >
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M9.53 16.122a3 3 0 0 0-5.78 1.128 2.25 2.25 0 0 1-2.4 2.245 4.5 4.5 0 0 0 8.4-2.245c0-.399-.078-.78-.22-1.128Zm0 0a15.998 15.998 0 0 0 3.388-1.62m-5.043-.025a15.994 15.994 0 0 1 1.622-3.395m3.42 3.42a15.995 15.995 0 0 0 4.764-4.648l3.876-5.814a1.151 1.151 0 0 0-1.597-1.597L14.146 6.32a15.996 15.996 0 0 0-4.649 4.763m3.42 3.42a6.776 6.776 0 0 0-3.42-3.42"
            ></path>
        </svg>
    </div>
    <ul
        tabindex="0"
        class="dropdown-content menu bg-base-100 rounded-box z-[1] h-[41rem] w-72 overflow-auto p-2 shadow"
    >
        {
            themes.map((theme) => (
                <li>
                    <button
                        data-set-theme={theme.value}
                        data-act-class="active"
                    >
                        {theme.name}
                    </button>
                </li>
            ))
        }
    </ul>
</div>

<script is:inline>
    // Load the theme-change library directly using a CDN to avoid import issues
    (function () {
        const themeChange = window.themeChange || {};

        // Set default theme if none is stored
        if (!localStorage.getItem('theme')) {
            localStorage.setItem('theme', 'light');
            document.documentElement.setAttribute('data-theme', 'light');
        }
        
        // Add event listener to theme buttons after page load
        document.addEventListener('astro:page-load', function () {
            const themeButtons = document.querySelectorAll('[data-set-theme]');
            themeButtons.forEach((button) => {
                button.addEventListener('click', function () {
                    const theme = this.getAttribute('data-set-theme');
                    document.documentElement.setAttribute('data-theme', theme);
                    localStorage.setItem('theme', theme);
                });
            });
        });
    })();
</script>

<!-- Load theme from localStorage on page load -->
<script is:inline>
    function applyTheme() {
        const theme = localStorage.getItem('theme');
        if (theme) {
            document.documentElement.setAttribute('data-theme', theme);
        }
    };
    
    document.addEventListener("astro:after-swap", applyTheme);
    applyTheme();

</script>