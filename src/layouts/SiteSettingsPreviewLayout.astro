---
import type { Locales } from '../../__generated/sdk';
import Footer from '../cms/shared/Footer.astro';
import Header from '../cms/shared/Header.astro';
import SiteStyles from "../cms/components/SiteStylesComponent/SiteStyles.astro";
import { getOptimizelySdk } from '../graphql/getSdk';
import type { ContentPayload } from '../graphql/shared/ContentPayload';
import '../styles/global.css';
interface Props {
    contentPayload: ContentPayload;
}

const { contentPayload } = Astro.props;

const siteSettings = await getOptimizelySdk(contentPayload).siteSettingsById({
    key: contentPayload.key,
    //@ts-ignore
    loc: contentPayload.loc as unknown as Locales,
    ver: contentPayload.ver,
});

const siteStyles = await getOptimizelySdk(contentPayload).siteStylesById({
    key: contentPayload.key,
    //@ts-ignore
    loc: contentPayload.loc as unknown as Locales,
    ver: contentPayload.ver,
});

const externalStylesUrl = siteStyles?.SiteStyles?.item?.cssFile?._metadata?.url?.default || null;

---

<!doctype html>
<html lang="en">
    <head>
        {siteStyles && <SiteStyles siteStyles={siteStyles} />}
        <meta charset="UTF-8" />
        { externalStylesUrl && (
            <>
                <link rel="preload" href={externalStylesUrl} as="style" />
                <link rel="stylesheet" href={externalStylesUrl} />
            </>
        )}
    </head>
    <body>
        <Header siteSettings={siteSettings} />
        <div class="w-full my-20 text-center text-3xl italic">
            Page Body Placeholder
        </div>
        <Footer siteSettings={siteSettings} />
    </body>
</html>
